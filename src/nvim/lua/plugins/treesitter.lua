local M = {}

M.install = {
  "asm",
  "astro",
  "awk",
  "bash",
  "c",
  "c_sharp",
  "clojure",
  "cmake",
  "comment",
  "commonlisp",
  "cpp",
  "css",
  "csv",
  "cuda",
  "diff",
  "dockerfile",
  "editorconfig",
  "fish",
  "git_config",
  "git_rebase",
  "gitattributes",
  "gitcommit",
  "gitignore",
  "glsl",
  "go",
  "gpg",
  "graphql",
  "haskell",
  "hlsl",
  "html",
  "htmldjango",
  "http",
  "ini",
  "java",
  "javadoc",
  "javascript",
  "jq",
  "jsdoc",
  "json",
  "json5",
  "kotlin",
  "lua",
  "luadoc",
  "make",
  "markdown",
  "markdown_inline",
  "nginx",
  "ninja",
  "nix",
  "objc",
  "objdump",
  "ocaml",
  "passwd",
  "php",
  "phpdoc",
  "pug",
  "python",
  "pymanifest",
  "ql",
  "query",
  "readline",
  "regex",
  "robots",
  "rust",
  "scala",
  "scss",
  "ssh_config",
  "styled",
  "superhtml",
  "svelte",
  "sway",
  "terraform",
  "tmux",
  "toml",
  "tsv",
  "tsx",
  "twig",
  "typescript",
  "udev",
  "vim",
  "vimdoc",
  "vue",
  "wgsl",
  "wgsl_bevy",
  "xcompose",
  "xml",
  "xresources",
  "yaml",
  "zig",
}

return {
  {
    "nvim-treesitter/nvim-treesitter",
    lazy = false,
    branch = "master",
    build = ":TSUpdate",
    config = function()
      require("nvim-treesitter.configs").setup({
        ensure_installed = M.install,
        auto_install = true,
        sync_install = false,
        highlight = {
          enable = true,
        },
        modules = {},
        ignore_install = {},
        parser_install_dir = nil,
        additional_vim_regex_highlighting = false,
      })

      vim.api.nvim_create_autocmd({ "BufRead", "BufNewFile" }, {
        pattern = { "*.env", ".env.*" },
        callback = function()
          vim.bo.filetype = "toml"
        end,
      })
    end,
  },

  {
    "fladson/vim-kitty",
    ft = "kitty",
  },
}
